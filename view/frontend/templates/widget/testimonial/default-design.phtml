<?php
/**
 * MageINIC
 * Copyright (C) 2023. MageINIC <support@mageinic.com>
 *
 * NOTICE OF LICENSE
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see https://opensource.org/licenses/gpl-3.0.html.
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category MageINIC
 * @package Hyva_MageINICTestimonial
 * @copyright Copyright (c) 2023. MageINIC (https://www.mageinic.com/)
 * @license https://opensource.org/licenses/gpl-3.0.html GNU General Public License,version 3 (GPL-3.0)
 * @author MageINIC <support@mageinic.com>
 */

use Hyva\MageINICTestimonial\ViewModel\HyvaData;
use MageINIC\Testimonial\Block\Widget\Testimonial;
use Magento\Framework\Escaper;
use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;

/**
 * Testimonial Default Design
 *
 * @var Testimonial $block
 * @var Escaper $escaper
 * @var ViewModelRegistry $viewModels
 * @var HyvaData $hyvaData
 * @var HeroiconsOutline $heroIcons
 */

$heroIcons = $viewModels->require(HeroiconsOutline::class);
$hyvaData = $viewModels->require(HyvaData::class);
$gliderUrl = $block->getViewFileUrl('Magento_PageBuilder::js/glider.min.js');
$testimonialCollection = $block->getTestimonial();
$design = $block->getDesignOptions();

$sliderClass = "testimonial-glider-$design";
$prevButton = "glider-prev-$design";
$nextButton = "glider-next-$design";
$dotsButton = "glider-dots-$design";

?>
<?php if ($block->getEnableExtension()): ?>
    <?php if ($block->getSliderEnable() && $testimonialCollection): ?>
        <div class="testimonial-main relative mb-5 testimonial-type-<?= $escaper->escapeHtmlAttr($design); ?>">
            <?php if ($block->enableHeading()): ?>
                <div class="testimonial-heading-wrapper mb-16 text-center w-full flex items-center flex-col">
                    <h2 class="text-2xl font-semibold mb-2 relative uppercase w-fit
                     border-solid border-b-4 border-[#00f]">
                        <?= $escaper->escapeHtml(__($block->getTestimonialHeading())) ?>
                    </h2>
                    <p class="font-semibold text-gray-600">
                        <?= $escaper->escapeHtml(__($block->getTestimonialMetaHeading())) ?>
                    </p>
                </div>
            <?php endif; ?>
            <div data-role="<?= $escaper->escapeHtmlAttr($sliderClass); ?>"
                 class="testimonial-wrapper" id="testimonial-wrapper">
                <?php foreach ($testimonialCollection as $testimonial): ?>
                    <div class="testimonial-row border rounded-lg block overflow-hidden pt-0
                    details-type-<?= $escaper->escapeHtmlAttr($design); ?>">
                        <div class="user-testimonial bg-[#00f] text-white relative after:transform after:-scale-y-100
                            after:h-0 after:z-[-1] after:border-solid px-[78px] pt-[30px] pb-[80px]
                            after:border-t-[16px] after:border-l-[475px] after:border-b-[1px] after:border-r-0
                            after:absolute after:-bottom-[16px] after:left-0 after:right-0 after:border-t-transparent
                            after:border-l-[#00f] after:border-b-transparent after:border-r-transparent
                            text-center rounded-t-lg">
                            <p x-data="{ isCollapsed: false, maxLength: 85, originalContent: '', content: '' }"
                               x-init="originalContent = $el.firstElementChild.textContent.trim();
                                   content = originalContent.slice(0, maxLength)">
                                    <span x-text="isCollapsed ? originalContent : content">
                                        <?= /* @noEscape */ $hyvaData->manageHtmlTag($testimonial->getContent());  ?>
                                    </span>
                                <button @click="isCollapsed = !isCollapsed"
                                        x-show="originalContent.length > maxLength"
                                        x-text="isCollapsed ? '⏏' : '▼'"></button>
                            </p>
                        </div>
                        <div class="testimonial-content flex flex-col items-center justify-center -mt-[40px] relative">
                            <div class="testimonial-imagewrapper w-[95px] h-[95px] overflow-hidden rounded-full">
                                <img src="<?= $escaper->escapeUrl($block->getImageUrl($testimonial)) ?>"
                                     width="70px" class="rounded-full w-full h-full object-cover"
                                     alt="<?= $escaper->escapeHtml(__($testimonial->getFirstName())) ?>"/>
                            </div>
                            <div class="name-testimonial text-[#00f] text-lg font-bold">
                                <span class="firstname">
                                    <?= $escaper->escapeHtml(__($testimonial->getFirstName())) ?>
                                </span>
                                <span class="lastname">
                                    <?= $escaper->escapeHtml(__($testimonial->getLastName())) ?>
                                </span>
                            </div>
                            <div class="designation-company text-black text-base font-normal">
                                <span class="designation">
                                    <?= $escaper->escapeHtml(__($testimonial->getDesignation())) ?>
                                </span><br>
                                <span class="company">
                                    <?php if ($block->isWebsite()): ?>
                                        <?php $website = $testimonial->getWebsite() !== null
                                            ? $testimonial->getWebsite() : '#' ?>
                                        <a href="<?= $escaper->escapeUrl($website) ?>">
                                                    <?= $escaper->escapeHtml(__($testimonial->getCompany())) ?></a>
                                    <?php else: ?>
                                        <?= $escaper->escapeHtml(__($testimonial->getCompany())) ?>
                                    <?php endif; ?>
                                </span>
                            </div>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
            <div class="arrows flex items-center justify-center flex-1 p-4">
                <?php if ($block->getArrow()): ?>
                    <button
                        aria-label="<?= $escaper->escapeHtml(__('Previous')) ?>"
                        class="<?= $escaper->escapeHtmlAttr($prevButton); ?> w-8 h-8 mr-1
                         text-black rounded-full outline-none focus:outline-none absolute top-[58%] -left-[30px]
                         transform translate-x-[-50%] translate-y-[-50%] border border-solid border-gray-300 flex
                         items-center justify-center">
                        <?= $heroIcons->chevronLeftHtml("w-5 h-5", 25, 25, ['aria-hidden' => 'true']); ?>
                    </button>
                <?php endif; ?>
                <?php if ($block->getSliderDots()): ?>
                    <div role="tablist"
                         class="<?= $escaper->escapeHtmlAttr($dotsButton); ?> select-none flex flex-wrap
                          mx-1 justify-center p-0 focus:outline-none"></div>
                <?php endif; ?>
                <?php if ($block->getArrow()): ?>
                    <button
                        aria-label="<?= $escaper->escapeHtml(__('Next')) ?>"
                        class="<?= $escaper->escapeHtmlAttr($nextButton); ?> w-8 h-8 ml-1
                         text-black rounded-full outline-none focus:outline-none absolute top-[58%] -right-[56px]
                         transform translate-x-[-50%] translate-y-[-50%] border border-solid border-gray-300 flex
                         items-center justify-center">
                        <?= $heroIcons->chevronRightHtml("w-5 h-5", 25, 25, ['aria-hidden' => 'true']); ?>
                    </button>
                <?php endif; ?>
            </div>
        </div>
        <script>
            'use strict';

            (() => {
                const initCarousels = () => {
                    if (!Glider) {
                        return;
                    }

                    const initSliderCarousel = () => {
                        const gliderElement = document.querySelector(
                            `[data-role="<?= $escaper->escapeHtmlAttr($sliderClass); ?>"]`);

                        if (!gliderElement) {
                            return;
                        }

                        const gliderDots = document.querySelector(`.<?= $escaper->escapeJs($dotsButton); ?>`);
                        const gliderPrev = document.querySelector(`.<?= $escaper->escapeJs($prevButton); ?>`);
                        const gliderNext = document.querySelector(`.<?= $escaper->escapeJs($nextButton); ?>`);

                        const glider = new Glider(gliderElement, {
                            slidesToShow: <?= $escaper->escapeJs($block->getDefaultSlide())
                                ? $escaper->escapeJs($block->getDefaultSlide()) : 1  ?>,
                            slidesToScroll: <?= $escaper->escapeJs($block->getDefaultSlick())
                                ? $escaper->escapeJs($block->getDefaultSlick()) : 1  ?>,
                            scrollLock: true,
                            rewind: <?= $escaper->escapeJs($block->getLooping())
                                ? $escaper->escapeJs($block->getLooping()) : "false" ?>,
                            draggable: true,
                            dragVelocity: 2.5,
                            dots: gliderDots,
                            arrows: {
                                prev: gliderPrev,
                                next: gliderNext,
                            },
                            responsive: <?= /* @noEscape */ $hyvaData->getHyvaSliderBreakPoints()  ?>,
                        });

                        var autoplay = <?= $escaper->escapeJs($block->getAutoplay()) ?>

                        if (autoplay !== false) {
                            var autoplaySpeed = <?= $escaper->escapeJs($block->getAutoplaySpeed())
                                ? $escaper->escapeJs($block->getAutoplaySpeed()) : 2000 ?>;
                            var infiniteLoop = <?= $escaper->escapeJs($block->getLooping())
                                ? $escaper->escapeJs($block->getLooping()) : false ?>;

                            gliderAutoplay(
                                glider,
                                autoplaySpeed,
                                infiniteLoop
                            );
                        }
                    };

                    const gliderAutoplay = (glider, milliseconds, loop) => {
                        const pagesCount = glider.track.childElementCount;
                        let slideTimeout = null;
                        let nextIndex = 1;
                        let paused = false;

                        const slide = () => {
                            slideTimeout = setTimeout(
                                () => {
                                    if (loop && nextIndex >= pagesCount) {
                                        nextIndex = 0;
                                    }
                                    glider.scrollItem(nextIndex);
                                },
                                parseInt(milliseconds)
                            );
                        };

                        glider.ele.addEventListener('glider-animated', () => {
                            nextIndex = glider.slide + glider.opt.slidesToScroll;
                            window.clearInterval(slideTimeout);
                            if (!paused && (loop || nextIndex < pagesCount)) {
                                slide();
                            }
                        });

                        const pause = () => {
                            if (!paused) {
                                clearInterval(slideTimeout);
                                paused = true;
                            }
                        };

                        const unpause = () => {
                            if (paused) {
                                slide();
                                paused = false;
                            }
                        };

                        glider.ele.parentElement.addEventListener('mouseover', pause, {passive: true});
                        glider.ele.parentElement.addEventListener('touchstart', pause, {passive: true});
                        glider.ele.parentElement.addEventListener('mouseout', unpause, {passive: true});
                        glider.ele.parentElement.addEventListener('touchend', unpause, {passive: true});

                        slide();
                    };

                    initSliderCarousel();
                };

                window.addEventListener('DOMContentLoaded', () => {

                    const script = document.createElement('script');
                    script.type = 'text/javascript';

                    script.addEventListener('load', () => {
                        initCarousels();
                    });

                    script.src = '<?= $escaper->escapeJs($escaper->escapeUrl($gliderUrl)) ?>';
                    document.head.appendChild(script);
                });

            })();
        </script>
    <?php else: ?>
        <div class="message info empty">
            <div><?= $escaper->escapeHtml(__(' There is no matching testimonial for this store.')) ?></div>
        </div>
    <?php endif; ?>
<?php endif; ?>
